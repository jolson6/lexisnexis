<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://sortresults.resultsorting.services.v1.wsapi.lexisnexis.com" xmlns:tns="http://sortresults.resultsorting.services.v1.wsapi.lexisnexis.com"
        xmlns:result="http://result.common.services.v1.wsapi.lexisnexis.com" xmlns:security="http://security.common.services.v1.wsapi.lexisnexis.com" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">

	<import namespace="http://result.common.services.v1.wsapi.lexisnexis.com" schemaLocation="Result.xsd"/>
	<import namespace="http://security.common.services.v1.wsapi.lexisnexis.com" schemaLocation="Security.xsd"/>

<!-- [XML CROSS LINKING]
Author: BandarNB: Added a new element "crosslinkFlag" for XML CROSS LINKING Functionality
Date 03-08-10.
 -->
	<!-- Define request/response elements -->
	<element name="SortResults" type="tns:SortResults">
		<annotation>
			<documentation>
			<br></br>
			This operation will accept a <strong><em>searchId</em></strong> and one or more <strong><em>sortId</em></strong> values as input.The response will contain a new <strong><em>searchId</em></strong> value corresponding to a new answer set. The
		    new answer set will contain the same documents as the original answer set, but will be reordered based on the sortId values supplied.
			</documentation>
		</annotation>
	</element>
	<element name="SortResultsResponse" type="tns:SortResultsResponse">
		<annotation>
			<documentation>The response from sorting the results.  A new searchId is returned.</documentation>
		</annotation>
	</element>

	<!-- Define request/response types -->
	<complexType name="SortResults">
		<sequence>
			<element name="binarySecurityToken" type="security:BinarySecurityToken">
				<annotation>
					<documentation>
						<example>f4348ad8876542bc93748c89fb98a7e</example>Security token that must be provided on all non-authentication requests.</documentation>
				</annotation>
			</element>
			<element name="searchId" type="string">
				<annotation>
					<documentation>
						<example>ef5bafbd11</example>Unique identifier that maintains all pertinent information
                        from the original search.</documentation>
				</annotation>
			</element>

			<element name="sortOrder" type="tns:SortOrder" minOccurs="0">
				<annotation>
					<documentation>
						<example>Implied</example>Strategy used to sort the results..  Implied 
             indicates that the sort order is chosen to best fit the search 
             method employed and the type of content that is returned.</documentation>
				</annotation>
			</element>

			<element name="sortStrategyList" type="tns:SortStrategyList" minOccurs="0">
				<annotation>
					<documentation>A list of sortId values by which the results will be sorted.
						The sort orders will be applied in the order specified.</documentation>
				</annotation>
			</element>

			<element name="retrievalOptions" type="result:RetrievalOptions" minOccurs="0">
				<annotation>
					<documentation>If present, this structure contains details about how retrieved
						documents are to be presented.  Also includes the range of documents
						to return.  If absent, no documents will be returned.
						Encloses the documentView,documentMarkup and documentRange elements which define a series of retrieval options.</documentation>
				</annotation>
			</element>
			
			<!--  [XML CROSS LINKING]: Start -->
			<element name="crosslinkFlag" type="string" minOccurs="0" maxOccurs="1">
			<annotation>
			<documentation>
				Created a new element for XML Crosslink functionality. 
				To enable the cross linking functionality, the value to be passed is "Y" or "y"
			</documentation>
			</annotation>
			</element>
			<!--  [XML CROSS LINKING]:END -->
			
		</sequence>
	</complexType>

	<complexType name="SortStrategyList">
		<sequence>
			<element name="sortStrategy" type="tns:SortStrategy" minOccurs="0" maxOccurs="unbounded">
				<annotation>
					<documentation>A sort strategy that will determine one sort order which will
						be applied to the current results.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>

	<complexType name="SortStrategy">
		<sequence>
			<element name="sortId" type="string">
				<annotation>
					<documentation>A sort strategy that will determine one sort order which will
						be applied to the current results.</documentation>
				</annotation>
			</element>
			<element name="sortDirection" type="tns:SortDirection" minOccurs="0" default="Ascending">
				<annotation>
					<documentation>The sort order that the results will be sorted for this 
						sortId, either ascending or descending.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>

	<simpleType name="SortDirection">
		<restriction base="string">
			<enumeration value="Ascending"/>
			<enumeration value="Descending"/>
		</restriction>
	</simpleType>

	<complexType name="SortResultsResponse">
		<complexContent>
			<extension base="result:RetrievalResponse">
				<sequence>
					<element name="searchId" type="string">
						<annotation>
							<documentation>
								<example>ef5bafbd11</example>Unique identifier that maintains all pertinent information
                  				from the original search.</documentation>
						</annotation>
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	
	<simpleType name="SortOrder">
		<restriction base="string">
			<enumeration value="Relevance" />
			<enumeration value="Date" />
		</restriction>
	</simpleType>
	
</schema>