<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://browseglobalsources.globalsourcedirectory.services.v1.wsapi.lexisnexis.com"
	xmlns:tns="http://browseglobalsources.globalsourcedirectory.services.v1.wsapi.lexisnexis.com"
	xmlns:common="http://common.services.v1.wsapi.lexisnexis.com"
	xmlns:security="http://security.common.services.v1.wsapi.lexisnexis.com"
	xmlns:sourcecommon="http://common.source.services.v1.wsapi.lexisnexis.com"
	xmlns:gsdcommon="http://common.globalsourcedirectory.services.v1.wsapi.lexisnexis.com"
	elementFormDefault="qualified"
	attributeFormDefault="unqualified"
	version="1.0">

	<import namespace="http://common.services.v1.wsapi.lexisnexis.com" schemaLocation="Common.xsd" />

	<import namespace="http://security.common.services.v1.wsapi.lexisnexis.com" schemaLocation="Security.xsd" />

    <import namespace="http://common.source.services.v1.wsapi.lexisnexis.com" schemaLocation="SourceCommon.xsd" />
    
    <import namespace="http://common.globalsourcedirectory.services.v1.wsapi.lexisnexis.com" schemaLocation="GlobalSourceDirectoryCommon.xsd" />

	<!-- Define request/response elements -->
	<element name="BrowseGlobalSources" type="tns:BrowseGlobalSources">
		<annotation>
			<documentation>Allows you to browse the global source directory hierarchy associated with your credentials (as dictated by your menu). The source directory is organized as a tree-like structure containing folders and sources. Since the names of folders and sources can change, folder identifiers and source identifiers are used to maintain persistence.</documentation>
		</annotation>
	</element>
	<element name="BrowseGlobalSourcesResponse" type="tns:BrowseGlobalSourcesResponse">
		<annotation>
			<documentation>Includes information about the requested node in the source hierarchy (i.e. tree).</documentation>
		</annotation>
	</element>

	<!-- Define request types -->
	<complexType name="BrowseGlobalSources">
		<sequence>
			<element name="locale" type="common:Locale">
				<annotation>
					<documentation>Optional locale indicating language of request.</documentation>
				</annotation>
			</element>
			<element name="binarySecurityToken" type="security:BinarySecurityToken">
				<annotation>
					<documentation>
						<example>f4348ad8876542bc93748c89fb98a7e</example>
						Security token that must be provided on all non-authentication requests.
					</documentation>
				</annotation>
			</element>
			<element name="includeTypeOfSource" type="boolean" minOccurs="0">
				<annotation>
					<documentation>
					   If true, it returns the "Type of Source" in Response Source objects.
					   Else, it does not return the "Type of Source" in Response.
                    </documentation>
				</annotation>
			</element>
			<element name="nodeId" type="string">
				<annotation>
					<documentation>The node indicating the location in the tree the client is currently browsing.</documentation>
				</annotation>
			</element>
			<element name="intersectionFilterList" type="gsdcommon:FilterList" minOccurs="0">
				<annotation>
					<documentation>
						Sets the list of filters to be applied to the incoming request.  The
						filters will be applied using a logical AND combination, meaning that only
						results that match ALL the filters (the intersection of the filters) will
						be returned.
					</documentation>
				</annotation>					
			</element>
			<element name="sourceViewType" type="tns:SourceViewType" minOccurs="0">
				<annotation>
					<documentation>This parameter controls what type of sources are returned in the source list. It can be all sources, group sources only, or single sources only. This functionality is not the same as a filter. A filter removed a source from consideration, while this only removes its display. As an example, a Node with group and single sources would still compute its combinability information based on all sources, not just the ones that may be displayed. Additionally, setting this value to single or group sources only may result in a node being selected.  The default is ALL_SOURCES.</documentation>
				</annotation>
			</element>
			<element name="useCSP" type="boolean" minOccurs="0">
				<annotation>
					<documentation>Sets the CSP value. false = R4.1 behavior (DFS combinability rules) true = R5 behavior (Combined Search combinability rules)</documentation>
				</annotation>
			</element>
			<element name="returnCountryFilterList" type="boolean" minOccurs="0">
				<annotation>
					<documentation>By default, this list is returned, but it can be ommitted to improve response time.</documentation>
				</annotation>
			</element>
			<element name="returnFirstLevelPubFilterList" type="boolean" minOccurs="0">
				<annotation>
					<documentation>By default, this list is returned, but it can be ommitted to improve response time.</documentation>
				</annotation>
			</element>
			<element name="returnIndustryTopicsFilterList" type="boolean" minOccurs="0">
				<annotation>
					<documentation>By default, this list is returned, but it can be ommitted to improve response time.</documentation>
				</annotation>
			</element>
			<element name="returnJurisdictionFilterList" type="boolean" minOccurs="0">
				<annotation>
					<documentation>By default, this list is returned, but it can be ommitted to improve response time.</documentation>
				</annotation>
			</element>
			<element name="returnLegalTopicsFilterList" type="boolean" minOccurs="0">
				<annotation>
					<documentation>By default, this list is returned, but it can be ommitted to improve response time.</documentation>
				</annotation>
			</element>
			<element name="returnNewsTopicsFilterList" type="boolean" minOccurs="0">
				<annotation>
					<documentation>By default, this list is returned, but it can be ommitted to improve response time.</documentation>
				</annotation>
			</element>
			<element name="returnRelatedFilterList" type="boolean" minOccurs="0">
				<annotation>
					<documentation>By default, this list is returned, but it can be ommitted to improve response time.</documentation>
				</annotation>
			</element>
			<element name="returnSecondLevelPubFilterList" type="boolean" minOccurs="0">
				<annotation>
					<documentation>By default, this list is returned, but it can be ommitted to improve response time.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>

	<simpleType name="SourceViewType">
		<restriction base="string">
			<enumeration value="ALL_SOURCES" />
			<enumeration value="GROUP_SOURCES_ONLY" />
			<enumeration value="SINGLE_SOURCES_ONLY" />
		</restriction>
	</simpleType>

	<simpleType name="FilterType">
		<restriction base="string">
			<enumeration value="AND" />
			<enumeration value="AND_NOT" />
			<enumeration value="OR" />
		</restriction>
	</simpleType>

	<complexType name="SourceFilterList">
		<sequence>
			<element ref="common:sourceId" maxOccurs="unbounded">
				<annotation>
					<documentation>Unique identifier for a standard LexisNexis source.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>

	<complexType name="PrimaryContentTypeOnlyFilterList">
		<sequence>
			<element name="primaryContentTypeOnlyFilter" type="integer" maxOccurs="unbounded">
				<annotation>
					<documentation>A primary content type only filter.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>

	<!-- Define response types -->
	<complexType name="BrowseGlobalSourcesResponse">
		<sequence>
			<element name="countryFilterList" type="tns:FilterDetailList" minOccurs="0">
				<annotation>
					<documentation>the list of NodeIdentifierNameResponse that represent the country nodes for context sensitive filtering. The list of countries that are valid for the user. These values would be used in the Rosetta application to populate the Country filter drop down when browsing sources. This list would only be countries which contain sources the user is entitled to. It will also only be populated when the include country info is set to true on the request.</documentation>
				</annotation>
			</element>
			<element name="firstLevelPubFilterList" type="tns:FilterDetailList" minOccurs="0">
				<annotation>
					<documentation>the list of NodeIdentifierNameResponse that represent the first level publication type nodes for context sensitive filtering. The list of first level publictions nodes under the selected pub type that are valid for the user. These values would be used in the Rosetta application to populate the first level pub type filter drop down when browsing sources. This list would only be first level pub types which contain sources the user is entitled to. It will also only be populated when the include pub type info is set to true on the request.</documentation>
				</annotation>
			</element>
			<element name="industryTopicsFilterList" type="tns:FilterDetailList" minOccurs="0">
				<annotation>
					<documentation>The list of valid topics for the user. This would be used to populate the topics filter that will appear on the Rosetta application when browsing sources by publication type.</documentation>
				</annotation>
			</element>
			<element name="jurisdictionFilterList" type="tns:FilterDetailList" minOccurs="0">
				<annotation>
					<documentation>the list of NodeIdentifierNameResponse that represent the jurisdiction nodes for context sensitive filtering. The list of jurisdictions under the selected country that are valid for the user. These values would be used in the Rosetta application to populate the Jurisdiction filter drop down when browsing sources. This list would only be jurisdictions which contain sources the user is entitled to. It will also only be populated when a country filter was passed in on the request and the include jurisdiction info is set to true on the request.</documentation>
				</annotation>
			</element>
			<element name="legalTopicsFilterList" type="tns:FilterDetailList" minOccurs="0">
				<annotation>
					<documentation>The list of valid topics for the user. This would be used to populate the topics filter that will appear on the Rosetta application when browsing sources by publication type.</documentation>
				</annotation>
			</element>
			<element name="newsTopicsFilterList" type="tns:FilterDetailList" minOccurs="0">
				<annotation>
					<documentation>The list of valid topics for the user. This would be used to populate the topics filter that will appear on the Rosetta application when browsing sources by publication type.</documentation>
				</annotation>
			</element>
			<element name="nodeList" type="tns:NodeList" minOccurs="0">
				<annotation>
					<documentation>The list of GlobalNode (category) results matching the parameters of the request. These indicate nodes for further browsing in the tree.</documentation>
				</annotation>
			</element>
			<element name="relatedNodeList" type="tns:NodeList" minOccurs="0">
				<annotation>
					<documentation>The list of GlobalNode related nodes results matching the parameters of the request.</documentation>
				</annotation>
			</element>
			<element name="secondLevelPubFilterList" type="tns:FilterDetailList" minOccurs="0">
				<annotation>
					<documentation>Returns the list of NodeIdentifierNameResponse that represent the first second publication type nodes for context sensitive filtering. The list of second level publictions nodes under the selected pub type that are valid for the user. These values would be used in the Rosetta application to populate the second level pub type filter drop down when browsing sources. This list would only be second level pub types which contain sources the user is entitled to. It will also only be populated when the include pub type info is set to true on the request.</documentation>
				</annotation>
			</element>
			<element name="sourceLandmarkList" type="tns:SourceLandmarkList" minOccurs="0">
				<annotation>
					<documentation>The list of SourceLandmark represents source locations in the list corresponding to the start of the next chunks. This is calculated from the first request using the explodeResultSize. Subsequent calls to retrieve chunks of the resulting sources should use the same explodeResultSize value as the original value on the request for this data to stay accurate.</documentation>
				</annotation>
			</element>
			<element name="sourceList" type="sourcecommon:SourceList" minOccurs="0">
				<annotation>
					<documentation>Returns the list of GlobalSource results matching the parameters of the request.</documentation>
				</annotation>
			</element>
			<element name="taxNodeName" type="string" minOccurs="0">
				<annotation>
					<documentation>The taxonomy node name when the input (requested) node is a taxonomy node.</documentation>
				</annotation>
			</element>
			<element name="totalResultCount" type="integer" minOccurs="0">
				<annotation>
					<documentation>Returns the total number of sources matching this request.</documentation>
				</annotation>
			</element>
			<element name="usingCountryFilter" type="boolean" minOccurs="0">
				<annotation>
					<documentation>This is a special flag for determining the SDS behavior that was applied when a country filter is passed in. If a country filter is passed in, and the user has no entitlements under that country, then SDS throws away that country filter and backs out to a "All countries" scenerio. If the country filter is a valid one, then the value here will be true, but if SDS did not apply the country filter, then the value will be false.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>

	<complexType name="NodeList">
		<sequence>
			<element name="node" type="tns:GlobalNode" maxOccurs="unbounded">
				<annotation>
					<documentation>A GlobalNode (category) result matching the parameters of the request. These indicate nodes for further browsing in the tree.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>

	<complexType name="RelatedNodeList">
		<sequence>
			<element name="node" type="tns:GlobalNode" maxOccurs="unbounded">
				<annotation>
					<documentation>A GlobalNode (category) result matching the parameters of the request. These indicate nodes for further browsing in the tree.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>

	<complexType name="SourceLandmarkList">
		<sequence>
			<element name="sourceLandmark" type="tns:SourceLandmark" maxOccurs="unbounded">
				<annotation>
					<documentation>The Source Landmark is an object used to collect jump locations for large result objects. For example, if there were 1000 results, there may be a landmark entry marking #1, #101, #201, #301, etc. These could then be used by clients to allow users to jump to those locations in the result set rather than returning the entire set to the user.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>

	<complexType name="SourceLandmark">
		<sequence>
			<element name="index" type="integer" minOccurs="0">
				<annotation>
					<documentation>Returns the location in the original results this source is located at.</documentation>
				</annotation>
			</element>
			<element name="source" type="sourcecommon:Source" minOccurs="0">
				<annotation>
					<documentation>The source information for the landmarked source.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>

	<complexType name="GlobalNode">
		<sequence>
			<element name="combinabilityFamilyList" type="sourcecommon:CombinabilityList" minOccurs="0">
				<annotation>
					<documentation>The combinability family list is a list of Strings defining the source's combinability family.</documentation>
				</annotation>
			</element>
			<element name="filterIndicator" type="tns:AppliedFilterType" minOccurs="0">
				<annotation>
					<documentation>Indicates if the source was valid and entitled for the client, but was filtered out using the dynamic filtering that was applied.</documentation>
				</annotation>
			</element>
			<element name="indexProcessed" type="tns:IndexProcessedType" minOccurs="0">
				<annotation>
					<documentation>Indicator used to determine if a source has been through the indexing processes.</documentation>
				</annotation>
			</element>
			<element name="name" type="string" minOccurs="0">
				<annotation>
					<documentation>Display Name for the Node</documentation>
				</annotation>
			</element>
			<element name="nodeId" type="string" minOccurs="0">
				<annotation>
					<documentation>The Node ID value for the Node to be used for subsequent calls</documentation>
				</annotation>
			</element>
			<element name="numChildren" type="integer" minOccurs="0">
				<annotation>
					<documentation>By default, this attribute will not be set on the response because it is expensive. It can be turned on/off through the NodeAttributeSwitches object. It will be set to -1 if the param was not set in the call.</documentation>
				</annotation>
			</element>
			<element name="containingChildren" type="boolean" minOccurs="0">
				<annotation>
					<documentation>If this node has children, then this attribute will indicate as such. The population if this attribute can be expensive, so it can be turned on/off using the NodeAttributeSwitches object. If the population of this attribute is off, then the value will be false by default.</documentation>
				</annotation>
			</element>
			<element name="entitled" type="boolean" minOccurs="0">
				<annotation>
					<documentation>Returns whether or not the node is considered entitled. If any source under this node is entitled, then the node is entitled.</documentation>
				</annotation>
			</element>
			<element name="transactional" type="boolean" minOccurs="0">
				<annotation>
					<documentation>Indicates if the source is a transactional source per the user's package definitions.</documentation>
				</annotation>
			</element>
			<element name="valid" type="boolean" minOccurs="0">
				<annotation>
					<documentation>Returns whether or not the node being requested is a valid Node ID? This would be false if a list is passed in from an application containing a Node that was recently removed from the system.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>

	<simpleType name="AppliedFilterType">
		<restriction base="string">
			<enumeration value="FIXED_PRICE_ONLY" />
			<enumeration value="NONE_APPLIED" />
			<enumeration value="TRANSACTIONAL_ONLY" />
		</restriction>
	</simpleType>

	<simpleType name="IndexProcessedType">
		<restriction base="string">
			<enumeration value="FULL" />
			<enumeration value="NONE" />
			<enumeration value="PARTIAL" />
		</restriction>
	</simpleType>

	<complexType name="FilterDetailList">
		<sequence>
			<element name="filterDetail" type="tns:FilterDetail" maxOccurs="unbounded">
				<annotation>
					<documentation>A node identifier</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
		
	<complexType name="FilterDetail">
		<sequence>
			<element name="childCount" type="integer" minOccurs="0">
				<annotation>
					<documentation>Number of children the node contains.</documentation>
				</annotation>
			</element>
			<element name="groupId" type="integer" minOccurs="0">
				<annotation>
					<documentation>The group Id of the object being returned.</documentation>
				</annotation>
			</element>
			<element name="filterId" type="string" minOccurs="0">
				<annotation>
					<documentation>The filter Id of the object being returned.</documentation>
				</annotation>
			</element>
			<element name="nodeName" type="string" minOccurs="0">
				<annotation>
					<documentation>The name of the node being returned.</documentation>
				</annotation>
			</element>
			<element name="containingChildren" type="boolean" minOccurs="0">
				<annotation>
					<documentation>A quick check indicating if there are children.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>

	<simpleType name="GlobalAdfType">
		<restriction base="string">
			<enumeration value="NO_ADF" />
			<enumeration value="MANDATORY_ADF" />
			<enumeration value="TABLE_OF_CONTENTS" />
			<enumeration value="INFORMATIONAL" />
			<enumeration value="CLASSIC_SOURCE" />
			<enumeration value="CONTENT_SOURCE" />
			<enumeration value="ABSOLUTELY_MANDATORY" />
		</restriction>
	</simpleType>

	<simpleType name="DisplayApproachType">
		<restriction base="string">
			<enumeration value="DISPLAY_APPROACH_DYNAMIC" />
			<enumeration value="DISPLAY_APPROACH_FABRICATED" />
			<enumeration value="DISPLAY_APPROACH_UNSUPPORTED" />
		</restriction>
	</simpleType>

	<simpleType name="PageBrowsableType">
		<restriction base="string">
			<enumeration value="PAGE_BROWSABLE_FULL" />
			<enumeration value="PAGE_BROWSABLE_NONE" />
			<enumeration value="PAGE_BROWSABLE_PARTIAL" />
		</restriction>
	</simpleType>

	<simpleType name="PermissibleUseType">
		<restriction base="string">
			<enumeration value="NONE" />
			<enumeration value="DPPA" />
			<enumeration value="GLPBA" />
			<enumeration value="BOTH" />
		</restriction>
	</simpleType>

	<simpleType name="PubTreeType">
		<restriction base="string">
			<enumeration value="PUB_TREE_NOT_SET" />
			<enumeration value="PUB_TREE_OPEN" />
			<enumeration value="PUB_TREE_CLOSED" />
		</restriction>
	</simpleType>

</schema>

<!--
	LexisNexis CONFIDENTIAL
	
	This document is the property of LexisNexis, and its contents are
	proprietary to LexisNexis. Reproduction in any form is prohibited.
	Finders are asked to return this document to:
	LexisNexis, P.O. Box 933, Dayton, Ohio  45401
	
	Copyright (c) 2007 by LexisNexis
	All Rights Reserved
-->